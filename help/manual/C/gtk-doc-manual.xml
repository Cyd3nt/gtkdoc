<?xml version="1.0" standalone="no"?>
<?xml-stylesheet type="text/xml" href="params.xsl"?>
<!-- vim: set ai tw=80 ts=3 sw=3: -->
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" "
              http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
                                                                                
<!ENTITY FDL SYSTEM "fdl-appendix.xml">
<!ENTITY FDLlink "<link linkend='fdl'>included</link>">
]><!-- =============Document Header ============================= -->
<book id="index">
  <bookinfo>
    <title>GTK-Doc Manual</title>
    <edition>1.4</edition>
    <authorgroup>
      <author>
        <firstname>Chris</firstname>
        <surname>Lyttle</surname>
        <affiliation>
          <address>
            <email>chris@wilddev.net</email>
          </address>
        </affiliation>
      </author>
      <author>
        <firstname>Dan</firstname>
        <surname>Mueth</surname>
        <affiliation>
          <address>
            <email>d-mueth@uchicago.edu</email>
          </address>
        </affiliation>
      </author>
      <author>
        <firstname>Stefan</firstname>
        <surname>Kost</surname>
        <affiliation>
          <address>
            <email>ensonic@users.sf.net</email>
          </address>
        </affiliation>
      </author>
    </authorgroup>
    <copyright>
      <year>2000, 2005</year>
      <holder>Dan Mueth and Chris Lyttle and Stefan Kost</holder>
    </copyright>

    <!-- translators: uncomment this:
    <copyright>
      <year>2000</year>
      <holder>ME-THE-TRANSLATOR (Latin translation)</holder>
    </copyright>
    -->

    <legalnotice>
      <para>
        Permission is granted to copy, distribute and/or modify this
        document under the terms of the <citetitle>GNU Free Documentation
        License</citetitle>, Version 1.1 or any later version published
        by the Free Software Foundation with no Invariant Sections, no
        Front-Cover Texts, and no Back-Cover Texts. A copy of the license
        is &FDLlink;.
      </para>
      <para>
        Many of the names used by companies to distinguish their products and
        services are claimed as trademarks. Where those names appear in any
        GNOME documentation, and those trademarks are made aware to the members
        of the GNOME Documentation Project, the names have been printed in caps
        or initial caps.
      </para>
    </legalnotice>

  </bookinfo>

  <!-- ======== Chapter 1: Introduction ======================== -->

  <chapter id="introduction">
    <title>Introduction</title>

    <para>
      This chapter introduces GTK-Doc and gives an overview of what it is and
      how it is used.
    </para>

    <sect1 id="whatisgtkdoc">
      <title>What is GTK-Doc?</title>

      <para>
        GTK-Doc is used to document C code. It is typically used to document the public
        API of libraries, such as the GTK+ and Gnome libraries. But it can also be
        used to document application code.
      </para>
    </sect1>

    <sect1 id="howdoesgtkdocwork">
      <title>How Does GTK-Doc Work?</title>

      <para>
        GTK-Doc works by using documentation of functions placed inside the source files in
        specially-formatted comment blocks, or documentation added to the template files
        which GTK-Doc uses (though note that GTK-Doc will only document functions that
        are declared in header files; it won't produce output for static functions).
      </para>

      <para>
        GTK-Doc consists of a number of perl scripts, each performing a different step
        in the process.
      </para>

      <para>
        There are 5 main steps in the process:
      </para>

      <orderedlist>

        <listitem>
          <para>
            <guilabel>Gathering information about the code.</guilabel>

            gtkdoc-scan scans the header files of the code looking for declarations of
            functions, macros, enums, structs, and unions. It creates a list of the
            declarations, placing them into sections according to which header file they
            are in. The author can rearrange the sections, and the order of the
            declarations within them, to produce the final desired order.
            
            gtkdoc-scanobj can also be used to dynamically query a library about
            any GtkObject subclasses it exports. It saves information about each
            object's position in the class hierarchy and about any GTK Args and Signals it
            provides.
          </para>
        </listitem>

        <listitem>
          <para>
            <guilabel>Generating the "template" files.</guilabel>

            gtkdoc-mktmpl creates a number of files in the tmpl/ subdirectory, using the
            information gathered in the first step. (Note that this can be run
            repeatedly. It will try to ensure that no documentation is ever lost.)
          </para>
        </listitem>

        <listitem>
          <para>
            <guilabel>Writing the documentation.</guilabel>

            The author fills in the template files with the documentation for each
            function, macro, union etc.
          </para>
        </listitem>

        <listitem>
          <para>
            <guilabel>Generating the SGML and HTML.</guilabel>

            gtkdoc-mkdb turns the template files into SGML files in the sgml/
            subdirectory.(If the source code contains documentation on functions, using the special
            comment blocks, it gets merged in here.)
            
            gtkdoc-mkhtml turns the SGML files into HTML files in the html/
            subdirectory.
          </para>
        </listitem>

        <listitem>
          <para>
            <guilabel>Fixing up cross-references between documents.</guilabel>

            After installing the HTML files, gtkdoc-fixxref can be run to fix up any
            cross-references between separate documents. For example, the GTK+
            documentation
            contains many cross-references to types documented in the GLib manual.
          </para>
        </listitem>
      </orderedlist>

    </sect1>

    <sect1 id="gettinggtkdoc">
      <title>Getting GTK-Doc</title>

      <sect2 id="requirements">
        <title>Requirements</title>
        <para>
          <guilabel>Perl v5</guilabel> - the main scripts are in Perl.
        </para>
        <para>
          <guilabel>DocBook DTD v3.0</guilabel> - This is the DocBook SGML DTD.
          <ulink url="http://www.ora.com/davenport" type="http">http://www.ora.com/davenport</ulink>
        </para>
        <para>
          <guilabel>Jade v1.1</guilabel> - This is a DSSSL processor for converting SGML to various formats.
          <ulink url="http://www.jclark.com/jade" type="http">http://www.jclark.com/jade</ulink>
        </para>
        <para>
          <guilabel>Modular DocBook Stylesheets</guilabel>
          This is the DSSSL code to convert DocBook to HTML (and a few other
          formats). It's used together with jade.
          I've customized the DSSSL code slightly, in gtk-doc.dsl, to colour
          the program code listings/declarations, and to support global
          cross-reference indices in the generated HTML.
          <ulink url="http://nwalsh.com/docbook/dsssl" type="http">http://nwalsh.com/docbook/dsssl</ulink>
        </para>
        <para>
          <guilabel>docbook-to-man</guilabel> - if you want to create man pages from the DocBook.
          I've customized the 'translation spec' slightly, to capitalise section
          headings and add the 'GTK Library' title at the top of the pages and the
          revision date at the bottom.
          There is a link to this on <ulink url="http://www.ora.com/davenport" type="http">http://www.ora.com/davenport</ulink>
          NOTE: This does not work yet.
        </para>
      </sect2>

      <sect2 id="installation">
        <title>Installation</title>
        <para>
          There is no standard place where the DocBook Modular Stylesheets are installed.
        </para>
        <para>
          gtk-doc's configure script searches these 3 directories automatically:
        </para>
        <para>
          <filename> /usr/lib/sgml/stylesheets/nwalsh-modular   </filename>     (used by RedHat)
        </para>
        <para>
          <filename>  /usr/lib/dsssl/stylesheets/docbook         </filename>     (used by Debian)
        </para>
        <para>
          <filename>  /usr/share/sgml/docbkdsl                   </filename>     (used by SuSE)
        </para>
        <para>
          If you have the stylesheets installed somewhere else, you need to configure
          gtk-doc using the option:
          <command> --with-dsssl-dir=&lt;PATH_TO_TOPLEVEL_STYLESHEETS_DIR&gt; </command>
        </para>
      </sect2>

    </sect1>

    <sect1 id="whentousegtkdoc">
      <title>When to Use GTK-Doc</title>

      <para>
        (FIXME)
      </para>

      <para>
        (What things GTK-Doc should, and shouldn't, be used for.)
        (- ???)
        (+ Tutorials)
      </para>

    </sect1>

    <sect1 id="aboutgtkdoc">
      <title>About GTK-Doc</title>

      <para>
        (FIXME)
      </para>

      <para>
        (History, authors, web pages, license, future plans,
        comparison with other similar systems.)
      </para>

    </sect1>

    <sect1 id="aboutthismanual">
      <title>About this Manual</title>

      <para>
        (FIXME)
      </para>

      <para>
        (who it is meant for, where you can get it, license)
      </para>

    </sect1>

  </chapter>

  <chapter id="settingup">
    <title>Setting up your project</title>
    
    <para>
      The next sections describe what steps to perform to integrate GTK-Doc into
      your project. Theses section assume we work on a project called 'meep'.
      This project contains alibrary called 'libmeep' and
      an end-user app called 'meeper'.
    </para>
    
    <sect1 id="settingup_docfiles">
      <title>Setting up a skelleton documentation</title>

      <para>
        Under your top-level project directory create folders called docs/reference
        (this way you can also have docs/help for end-user documentation).
        It is recommended to create another subdirectory with the name of the doc-package.
        For packages with just one library this step is not neccesary.
      </para>

      <para>
        docfiles: xxx.types, xxx-docs.sgml, xxx-sections.txt
      </para>

      <para>
        This can then look as show below:
        <example><title>Example directory structure</title>
          <programlisting>
<![CDATA[
meep/
  docs/
    reference/
      libmeep/
      meeper/
  src/
    libmeep/
    meeper/
]]>
          </programlisting>
        </example>
      </para>
    </sect1>

    <sect1 id="settingup_autoconf">
      <title>Integration with autoconf</title>
    
      <para>
        Very easy! Just add one line to your <filename>configure.ac</filename> script.
      </para>
    
      <para>
        <example><title>Integration with autoconf</title>
          <programlisting>
<![CDATA[
# check for gtk-doc
GTK_DOC_CHECK(1.4)
]]>
          </programlisting>
        </example>
      </para>

      <para>
        Besides checking for the required Gtk-Doc version, this adds two configure
        switches:
      </para>
      <orderedlist>
        <listitem><para>--with-html-dir=PATH : path to installed docs</para></listitem>
        <listitem><para>--enable-gtk-doc : use gtk-doc to build documentation</para></listitem>
      </orderedlist>
    </sect1>
    
    <sect1 id="settingup_automake">
      <title>Integration with automake</title>

      <para>
        First copy the <filename>Makefile.am</filename> from the examples subdirectory of the gtkdoc-sources
        to your project's API documentation directory (
        <filename class='directory'>./docs/reference/&lt;package&gt;</filename>).
        If you have multiple doc-packages repeat this for each one.
        Then edit the variables appropriately.
      </para>
      <para>
        Also copy the <filename>gtk-doc.make</filename> for the toplevel dir of gtkdoc.
        The recommended place for it is the directory <filename class='directory'>./docs/reference</filename>.
        The <filename>Makefile.am</filename> files include this file at the last line.
        Make sure the path used there is correct.
      </para>
    </sect1>

  </chapter>

  <chapter id="documenting">
    <title>Documenting the code</title>

    <para>
      GTK-Doc uses source code comment with a special syntax for code documentation.
      Further it retrieves information about your project structure from other
      sources. During the next section you find all information about the syntax
      of the comments.
    </para>

    <para>
      (FIXME)
    </para>

    <para>
      (suggest documenting inside the source)
    </para>

    <sect1 id="documenting_syntax">
      <title>Documentation comments</title>

      <para>
        A multiline comment that starts with an aditional '*' marks a
        documentation block that will be processed by the Gtk-Doc tools.
        <example><title>Gtk-Doc comment block</title>
          <programlisting>
<![CDATA[
/**
 * documenation ,,,
 */
]]>
          </programlisting>
        </example>
      </para>
      
      <para>
        As already mentioned earlier Gtk-Doc is for documenting public API. Thus
        one can't write documentation for static symbols. Nevertheless it is good
        to comment those symbols too. This helps other to understand you code.
        Therefore we recommend to comment these using normal comments (without the
        2nd '*' in the first line).
        If later the function needs to be made public, all one needs to do is to
        add another '*' in the comment block and insert the symbol name at the
        right place inside the sections file.
      </para>
    </sect1>

    <sect1 id="documenting_sections">
      <title>Documenting sections</title>

      <para>
        Each section of the documentation cointains information about one class or one module.
        To introduce the component one can write a section block.
      </para>

      <para>
        (FIXME)
      </para>

      <para>
        <example><title>Section comment block</title>
          <programlisting>
<![CDATA[
/**
 *
 */
]]>
          </programlisting>
        </example>
      </para>

    </sect1>

    <sect1 id="documenting_symbols">
      <title>Documenting symbols</title>

      <para>
        (FIXME)
      </para>
    </sect1>

    <sect1 id="documenting_reports">
      <title>Controlling the result</title>

      <para>
        (FIXME)
      </para>

      <para>
        (locating uncomplete or totaly undocumented symbols)
      </para>
    </sect1>

  </chapter>

  <chapter id="faq">
    <title>Frequently asked question</title>
    
    <para>No class hierarchy.</para>
    <para>No symbol index.</para>
    <para>Symbols are not linked.</para>
    <para>A new class does not appear in the docs.</para>
    <para>A new symbol does not appear in the docs.</para>
  </chapter>
  
  <!-- ======== Appendix: FDL ================================== -->
  &FDL;

</book>

